ResNet(
  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (1): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer4): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
  (fc): Linear(in_features=512, out_features=10, bias=True)
)
Using cpu device
Epoch 0/290
epoch: 0, iteration: 1, alliters: 1, lr: 0.1, loss: 2.769, avgloss: 2.769
epoch: 0, iteration: 32, alliters: 32, lr: 0.1, loss: 15.342, avgloss: 9.699
epoch: 0, iteration: 63, alliters: 63, lr: 0.1, loss: 2.780, avgloss: 7.496
epoch: 0, iteration: 94, alliters: 94, lr: 0.1, loss: 2.920, avgloss: 6.142
epoch: 0, iteration: 125, alliters: 125, lr: 0.1, loss: 2.125, avgloss: 5.186
epoch: 0, iteration: 156, alliters: 156, lr: 0.1, loss: 2.198, avgloss: 4.584
epoch: 0, iteration: 187, alliters: 187, lr: 0.1, loss: 2.058, avgloss: 4.175
epoch: 0, iteration: 218, alliters: 218, lr: 0.1, loss: 2.118, avgloss: 3.878
epoch: 0, iteration: 249, alliters: 249, lr: 0.1, loss: 2.024, avgloss: 3.652
epoch: 0, iteration: 280, alliters: 280, lr: 0.1, loss: 1.963, avgloss: 3.471
epoch: 0, iteration: 311, alliters: 311, lr: 0.1, loss: 2.018, avgloss: 3.326
epoch: 0, iteration: 342, alliters: 342, lr: 0.1, loss: 1.945, avgloss: 3.203
epoch: 0, iteration: 373, alliters: 373, lr: 0.1, loss: 1.861, avgloss: 3.097
Epoch 1/290
epoch: 1, iteration: 1, alliters: 391, lr: 0.1, loss: 1.960, avgloss: 1.960
epoch: 1, iteration: 32, alliters: 422, lr: 0.1, loss: 1.961, avgloss: 1.886
epoch: 1, iteration: 63, alliters: 453, lr: 0.1, loss: 2.013, avgloss: 1.876
epoch: 1, iteration: 94, alliters: 484, lr: 0.1, loss: 1.888, avgloss: 1.868
epoch: 1, iteration: 125, alliters: 515, lr: 0.1, loss: 1.822, avgloss: 1.856
epoch: 1, iteration: 156, alliters: 546, lr: 0.1, loss: 1.664, avgloss: 1.845
epoch: 1, iteration: 187, alliters: 577, lr: 0.1, loss: 1.694, avgloss: 1.835
epoch: 1, iteration: 218, alliters: 608, lr: 0.1, loss: 1.718, avgloss: 1.827
epoch: 1, iteration: 249, alliters: 639, lr: 0.1, loss: 1.769, avgloss: 1.820
epoch: 1, iteration: 280, alliters: 670, lr: 0.1, loss: 1.747, avgloss: 1.813
epoch: 1, iteration: 311, alliters: 701, lr: 0.1, loss: 1.668, avgloss: 1.805
epoch: 1, iteration: 342, alliters: 732, lr: 0.1, loss: 1.732, avgloss: 1.796
epoch: 1, iteration: 373, alliters: 763, lr: 0.1, loss: 1.665, avgloss: 1.789
Epoch 2/290
epoch: 2, iteration: 1, alliters: 781, lr: 0.1, loss: 1.768, avgloss: 1.768
epoch: 2, iteration: 32, alliters: 812, lr: 0.1, loss: 1.686, avgloss: 1.682
epoch: 2, iteration: 63, alliters: 843, lr: 0.1, loss: 1.856, avgloss: 1.690
epoch: 2, iteration: 94, alliters: 874, lr: 0.1, loss: 1.612, avgloss: 1.673
epoch: 2, iteration: 125, alliters: 905, lr: 0.1, loss: 1.484, avgloss: 1.658
epoch: 2, iteration: 156, alliters: 936, lr: 0.1, loss: 1.640, avgloss: 1.650
epoch: 2, iteration: 187, alliters: 967, lr: 0.1, loss: 1.634, avgloss: 1.643
epoch: 2, iteration: 218, alliters: 998, lr: 0.1, loss: 1.634, avgloss: 1.637
epoch: 2, iteration: 249, alliters: 1029, lr: 0.1, loss: 1.613, avgloss: 1.632
epoch: 2, iteration: 280, alliters: 1060, lr: 0.1, loss: 1.633, avgloss: 1.628
epoch: 2, iteration: 311, alliters: 1091, lr: 0.1, loss: 1.444, avgloss: 1.622
epoch: 2, iteration: 342, alliters: 1122, lr: 0.1, loss: 1.559, avgloss: 1.617
epoch: 2, iteration: 373, alliters: 1153, lr: 0.1, loss: 1.678, avgloss: 1.614
Epoch 3/290
epoch: 3, iteration: 1, alliters: 1171, lr: 0.1, loss: 1.609, avgloss: 1.609
epoch: 3, iteration: 32, alliters: 1202, lr: 0.1, loss: 1.433, avgloss: 1.522
epoch: 3, iteration: 63, alliters: 1233, lr: 0.1, loss: 1.647, avgloss: 1.525
epoch: 3, iteration: 94, alliters: 1264, lr: 0.1, loss: 1.501, avgloss: 1.524
epoch: 3, iteration: 125, alliters: 1295, lr: 0.1, loss: 1.353, avgloss: 1.520
epoch: 3, iteration: 156, alliters: 1326, lr: 0.1, loss: 1.478, avgloss: 1.518
epoch: 3, iteration: 187, alliters: 1357, lr: 0.1, loss: 1.433, avgloss: 1.517
epoch: 3, iteration: 218, alliters: 1388, lr: 0.1, loss: 1.590, avgloss: 1.517
epoch: 3, iteration: 249, alliters: 1419, lr: 0.1, loss: 1.382, avgloss: 1.515
epoch: 3, iteration: 280, alliters: 1450, lr: 0.1, loss: 1.465, avgloss: 1.513
epoch: 3, iteration: 311, alliters: 1481, lr: 0.1, loss: 1.382, avgloss: 1.512
epoch: 3, iteration: 342, alliters: 1512, lr: 0.1, loss: 1.638, avgloss: 1.510
epoch: 3, iteration: 373, alliters: 1543, lr: 0.1, loss: 1.352, avgloss: 1.504
Accuracy for class plane is: 35.6 %
Accuracy for class car   is: 60.2 %
Accuracy for class bird  is: 7.9 %
Accuracy for class cat   is: 19.8 %
Accuracy for class deer  is: 47.2 %
Accuracy for class dog   is: 51.9 %
Accuracy for class frog  is: 52.7 %
Accuracy for class horse is: 52.1 %
Accuracy for class ship  is: 69.6 %
Accuracy for class truck is: 57.6 %
Epoch 4/290
